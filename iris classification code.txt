# iris_classification.py

# Import libraries
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

# --------------------------
# 1. Load the Iris dataset
# --------------------------
iris = load_iris()
df = pd.DataFrame(data=iris.data, columns=iris.feature_names)
df['species'] = iris.target
df['species'] = df['species'].map({0: 'setosa', 1: 'versicolor', 2: 'virginica'})

print("First 5 rows of dataset:")
print(df.head())

# --------------------------
# 2. Data Visualization
# --------------------------
sns.pairplot(df, hue="species")
plt.show()

# --------------------------
# 3. Split Data
# --------------------------
X = df.drop("species", axis=1)
y = df["species"]

X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42, stratify=y
)

# --------------------------
# 4. Train Model
# --------------------------
model = RandomForestClassifier(random_state=42)
model.fit(X_train, y_train)

# --------------------------
# 5. Evaluate Model
# --------------------------
y_pred = model.predict(X_test)

print("\nModel Evaluation:")
print("Accuracy:", accuracy_score(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))

# Confusion Matrix
plt.figure(figsize=(5,4))
sns.heatmap(confusion_matrix(y_test, y_pred), annot=True, cmap="Blues", fmt="d",
            xticklabels=iris.target_names, yticklabels=iris.target_names)
plt.xlabel("Predicted")
plt.ylabel("Actual")
plt.title("Confusion Matrix")
plt.show()

# --------------------------
# 6. Test with New Data
# --------------------------
sample = [[5.1, 3.5, 1.4, 0.2]]  # Example measurement
prediction = model.predict(sample)
print("\nPrediction for sample {}: {}".format(sample[0], prediction[0]))
